const { Client, GatewayIntentBits } = require("discord.js");
const { QuickDB } = require("quick.db");
const db = new QuickDB();
const express = require("express");
const app = express();
app.get("/", (req, res) => res.send("–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"));
app.listen(8080);


const client = new Client({
    intents: [
        GatewayIntentBits.Guilds,
        GatewayIntentBits.GuildVoiceStates,
        GatewayIntentBits.GuildMessages,
        GatewayIntentBits.MessageContent
    ]
});

const userJoinTime = new Map();

client.on("ready", () => {
    console.log(`${client.user.tag} –∑–∞–ø—É—â–µ–Ω!`);
    console.log("REPLIT_URL:", process.env.REPLIT_URL);
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º—è –≤—Ö–æ–¥–∞ –≤ –≥–æ–ª–æ—Å–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
    client.guilds.cache.forEach(guild => {
        guild.members.cache.forEach(member => {
            if (member.voice.channelId) {
                userJoinTime.set(member.id, Date.now());
            }
        });
    });
});

// –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –≤—Ö–æ–¥ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª
client.on("voiceStateUpdate", async (oldState, newState) => {
    const userId = newState.member.id; // –¢–µ–ø–µ—Ä—å –±–µ—Ä—ë–º ID –ø—Ä–∞–≤–∏–ª—å–Ω–æ
    const guildId = newState.guild.id; // ID —Å–µ—Ä–≤–µ—Ä–∞ (—á—Ç–æ–±—ã —Ä–∞–∑–¥–µ–ª—è—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ —Å–µ—Ä–≤–µ—Ä–∞–º)

    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—à—ë–ª –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª
    if (!oldState.channelId && newState.channelId) {
        userJoinTime.set(userId, Date.now());
    }

    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—à–µ–ª –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    if (oldState.channelId && !newState.channelId) {
        if (userJoinTime.has(userId)) {
            const joinTime = userJoinTime.get(userId);
            const timeSpent = Date.now() - joinTime;
            userJoinTime.delete(userId);

            let totalTime = (await db.get(`voiceTime_${guildId}_${userId}`)) || 0;
            totalTime += timeSpent;
            await db.set(`voiceTime_${guildId}_${userId}`, totalTime);
        }
    }
});

client.on("messageCreate", async (message) => {
    if (message.content === "!restart" && message.author.id === "–¢–í–û–ô_DISCORD_ID") {
        await message.reply("–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞—é—Å—å... üîÑ");
        process.exit(); // –ó–∞–≤–µ—Ä—à–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å (–∑–∞–ø—É—Å–∫–∞–π —á–µ—Ä–µ–∑ nodemon)
    }
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Ä–µ–º–µ–Ω–∏
client.on("messageCreate", async (message) => {
    if (message.content === "!voice") {
        const userId = message.author.id;
        const guildId = message.guild.id; // ID —Å–µ—Ä–≤–µ—Ä–∞
        let totalTime = (await db.get(`voiceTime_${guildId}_${userId}`)) || 0;

        // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–µ–π—á–∞—Å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º —á–∞—Ç–µ, –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
        const member = message.guild.members.cache.get(userId);
        if (member && member.voice.channelId) {
            const joinTime = userJoinTime.get(userId);
            if (joinTime) {
                totalTime += Date.now() - joinTime;
            }
        }

        const hours = Math.floor(totalTime / 3600000);
        const minutes = Math.floor((totalTime % 3600000) / 60000);
        const seconds = Math.floor((totalTime % 60000) / 1000);

        message.reply(`–¢—ã –ø—Ä–æ–≤—ë–ª –≤ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —á–∞—Ç–∞—Ö: **${hours}—á ${minutes}–º ${seconds}—Å** (–≤–∫–ª—é—á–∞—è —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è)`);
    }
});

client.login("MTM0NDA0MzI4NzIwNzc0MzYzOA.GbRZmC.ExX9fgjIGSgogWE37LRi2oFp38u0CY-gUWFQ9w");
